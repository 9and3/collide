17:16:43,267 root DEBUG [INFO]: Logger root setup
17:16:44,318 trimesh DEBUG falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
17:16:44,367 graphviz._tools DEBUG deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:16:44,367 graphviz._tools DEBUG deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:16:44,367 graphviz._tools DEBUG deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
17:16:44,368 graphviz._tools DEBUG deprecate positional args: graphviz.backend.viewing.view(['quiet'])
17:16:44,369 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
17:16:44,369 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
17:16:44,369 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
17:16:44,369 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
17:16:44,369 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.saving.Save.save(['directory'])
17:16:44,370 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
17:16:44,371 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.save(['directory'])
17:16:44,371 root DEBUG [INFO]: load meshes on memory files from container
17:16:44,380 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
17:16:44,380 trimesh DEBUG load_mesh executed in 0.0086 seconds.
17:16:44,393 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
17:16:44,394 trimesh DEBUG load_mesh executed in 0.0111 seconds.
17:16:44,407 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
17:16:44,408 trimesh DEBUG load_mesh executed in 0.0107 seconds.
17:16:44,410 root DEBUG [ERROR]: Mesh d is not watertight
17:17:43,304 root DEBUG [INFO]: Logger root setup
17:17:44,339 trimesh DEBUG falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
17:17:44,384 graphviz._tools DEBUG deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:17:44,385 graphviz._tools DEBUG deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:17:44,385 graphviz._tools DEBUG deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
17:17:44,385 graphviz._tools DEBUG deprecate positional args: graphviz.backend.viewing.view(['quiet'])
17:17:44,386 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
17:17:44,386 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
17:17:44,386 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
17:17:44,387 graphviz._tools DEBUG deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.saving.Save.save(['directory'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
17:17:44,388 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.save(['directory'])
17:17:44,388 root DEBUG [INFO]: load meshes on memory files from container
17:17:44,397 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
17:17:44,398 trimesh DEBUG load_mesh executed in 0.0089 seconds.
17:17:44,410 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
17:17:44,410 trimesh DEBUG load_mesh executed in 0.0104 seconds.
17:17:44,425 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
17:17:44,425 trimesh DEBUG load_mesh executed in 0.0119 seconds.
17:17:44,428 root DEBUG [ERROR]: Mesh d is not watertight
17:18:23,24 root DEBUG [INFO]: Logger root setup
17:18:24,75 trimesh DEBUG falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
17:18:24,120 graphviz._tools DEBUG deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:18:24,121 graphviz._tools DEBUG deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:18:24,121 graphviz._tools DEBUG deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
17:18:24,121 graphviz._tools DEBUG deprecate positional args: graphviz.backend.viewing.view(['quiet'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
17:18:24,123 graphviz._tools DEBUG deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
17:18:24,124 graphviz._tools DEBUG deprecate positional args: graphviz.saving.Save.save(['directory'])
17:18:24,124 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
17:18:24,124 graphviz._tools DEBUG deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
17:18:24,124 graphviz._tools DEBUG deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
17:18:24,124 graphviz._tools DEBUG deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
17:18:24,125 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
17:18:24,125 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
17:18:24,125 graphviz._tools DEBUG deprecate positional args: graphviz.sources.Source.save(['directory'])
17:18:24,125 root DEBUG [INFO]: load meshes on memory files from container
17:18:24,134 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
17:18:24,134 trimesh DEBUG load_mesh executed in 0.0094 seconds.
17:18:24,149 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
17:18:24,149 trimesh DEBUG load_mesh executed in 0.0116 seconds.
17:18:24,163 trimesh DEBUG loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
17:18:24,163 trimesh DEBUG load_mesh executed in 0.0114 seconds.
17:18:24,166 root DEBUG [ERROR]: Mesh d is not watertight
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0093 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0110 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:root:[ERROR]: Mesh d is not watertight
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0184 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[WARN]: a is colliding with {'a', 'c'}
DEBUG:root:[WARN]: c is colliding with {'a', 'c'}
DEBUG:root:[WARN]: d is colliding with {'c', 'd'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0199 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0181 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[WARN]: a is colliding with {'c', 'a'}
DEBUG:root:[WARN]: c is colliding with {'c', 'a'}
DEBUG:root:[WARN]: d is colliding with {'c', 'd'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0189 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0144 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[WARN]: a is colliding with {'c', 'a'}
DEBUG:root:[WARN]: c is colliding with {'c', 'a'}
DEBUG:root:[WARN]: d is colliding with {'c', 'd'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: a is in collision with {'a', 'c'}
DEBUG:root:[WARN]: a is colliding with {'a', 'c'}
DEBUG:root:[INFO]: c is in collision with {'a', 'c'}
DEBUG:root:[WARN]: c is colliding with {'a', 'c'}
DEBUG:root:[INFO]: d is in collision with {'c', 'd'}
DEBUG:root:[WARN]: d is colliding with {'c', 'd'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0125 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0192 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0232 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0148 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0125 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0125 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0189 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0201 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0111 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0181 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0191 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0111 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0192 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a is colliding with {'c'}
DEBUG:root:[WARN]: c is colliding with {'a'}
DEBUG:root:[WARN]: d is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0142 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0125 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0249 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0180 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0178 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0197 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0110 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0181 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0199 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0145 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0156 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0197 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0184 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0190 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0198 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0181 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0196 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0147 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0184 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0236 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0149 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0249 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0256 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0151 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0087 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0106 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0100 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0094 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0125 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0105 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0170 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0151 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0127 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'d'}
DEBUG:root:[WARN]: b) is colliding with {'e'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'a'}
DEBUG:root:[WARN]: e) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'a'}
DEBUG:root:[WARN]: f) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0188 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0220 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'a'}
DEBUG:root:[WARN]: f) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualizing meshes and intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0096 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0153 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0142 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0093 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0112 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0107 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0127 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'a'}
DEBUG:root:[WARN]: f) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0045 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: vosualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0095 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0103 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0207 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: vosualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0094 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0104 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0110 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0105 seconds.
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0093 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0112 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0107 seconds.
DEBUG:root:[ERROR]: Mesh c) in ./data/m_H.ply is not watertight
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:root:[ERROR]: Mesh c) in ./data/m_H.ply is not watertight
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0104 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(6269, 3), faces.shape=(12536, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0104 seconds.
DEBUG:root:[ERROR]: Mesh c) in ./data/m_H.ply is not watertight
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0088 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0106 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0152 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0233 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0145 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: vosualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0144 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:root:[INFO]: vosualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0093 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0223 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: d) is colliding with set()
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:root:[INFO]: vosualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0098 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0155 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0234 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0143 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'d'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with set()
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0124 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0152 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0231 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'d'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with set()
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: d) is colliding with {'e'}
DEBUG:root:[WARN]: e) is colliding with {'d'}
DEBUG:root:[WARN]: f) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'d'}
DEBUG:root:[WARN]: b) is colliding with {'e'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0206 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0295 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with set()
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0110 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0227 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with set()
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0248 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0123 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0230 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0181 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0184 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0178 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'a', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'b', 'd'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'c'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'd'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5660, 3), faces.shape=(11686, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0103 seconds.
DEBUG:root:[WARN]: Intersection a)-a is not watertight!
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9286, 3), faces.shape=(19064, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0168 seconds.
DEBUG:root:[WARN]: Intersection b)-b is not watertight!
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11464, 3), faces.shape=(24158, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0205 seconds.
DEBUG:root:[WARN]: Intersection c)-c is not watertight!
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8006, 3), faces.shape=(16558, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0143 seconds.
DEBUG:root:[WARN]: Intersection d)-d is not watertight!
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0111 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0231 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0231 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0031 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0123 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0189 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0228 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0123 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0254 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0217 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0230 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0138 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with set()
DEBUG:root:[WARN]: d) is colliding with set()
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0182 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0221 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0031 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0043 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0180 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0237 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0145 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0182 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0044 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0112 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0185 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0043 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0110 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0197 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0224 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0229 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0035 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0189 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0227 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0230 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0119 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0190 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0226 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0142 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0116 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0043 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0226 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0138 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0114 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0178 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0223 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0138 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0239 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0224 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0220 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0139 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0112 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0224 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0035 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0182 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0118 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0226 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0115 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0229 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0206 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0217 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0123 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0117 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0219 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0228 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0146 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0122 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0227 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0144 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0226 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0121 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0180 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0218 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0186 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0225 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0113 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0225 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0143 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0182 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0036 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0097 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0154 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0127 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0215 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0155 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0182 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0208 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: b) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: c) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: d) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: e) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: f) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[WARN]: g) is colliding with {('e', 'f'), ('c', 'g'), ('c', 'd'), ('b', 'c'), ('a', 'f'), ('b', 'f'), ('b', 'd')}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0094 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0107 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0089 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0101 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0209 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: b) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: c) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: d) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: e) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: f) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[WARN]: g) is colliding with {('e', 'f'), ('c', 'd'), ('c', 'g'), ('b', 'd'), ('a', 'f'), ('b', 'c'), ('b', 'f')}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0111 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0172 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0209 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: g) is colliding with {('e', 'f'), ('c', 'g'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0105 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0210 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0109 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: d) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: e) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: f) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: b) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: f) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: c) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: g) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: a) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: f) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: c) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: d) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: b) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[WARN]: c) is colliding with {('b', 'd'), ('e', 'f'), ('b', 'f'), ('c', 'g'), ('a', 'f'), ('c', 'd'), ('b', 'c')}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0104 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0172 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0210 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: g) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: e) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: f) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: b) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: d) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: b) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: c) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: c) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: d) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: a) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: f) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: b) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[WARN]: f) is colliding with {('c', 'g'), ('e', 'f'), ('b', 'd'), ('b', 'c'), ('c', 'd'), ('a', 'f'), ('b', 'f')}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0086 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0177 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0140 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with ('c', 'g')
DEBUG:root:[WARN]: g) is colliding with ('c', 'g')
DEBUG:root:[WARN]: b) is colliding with ('b', 'c')
DEBUG:root:[WARN]: c) is colliding with ('b', 'c')
DEBUG:root:[WARN]: b) is colliding with ('b', 'f')
DEBUG:root:[WARN]: f) is colliding with ('b', 'f')
DEBUG:root:[WARN]: c) is colliding with ('c', 'd')
DEBUG:root:[WARN]: d) is colliding with ('c', 'd')
DEBUG:root:[WARN]: a) is colliding with ('a', 'f')
DEBUG:root:[WARN]: f) is colliding with ('a', 'f')
DEBUG:root:[WARN]: b) is colliding with ('b', 'd')
DEBUG:root:[WARN]: d) is colliding with ('b', 'd')
DEBUG:root:[WARN]: e) is colliding with ('e', 'f')
DEBUG:root:[WARN]: f) is colliding with ('e', 'f')
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0187 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0213 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {('c',)}
DEBUG:root:[WARN]: c) is colliding with {('b',)}
DEBUG:root:[WARN]: b) is colliding with {('c',), ('d',)}
DEBUG:root:[WARN]: d) is colliding with {('b',)}
DEBUG:root:[WARN]: e) is colliding with {('f',)}
DEBUG:root:[WARN]: f) is colliding with {('e',)}
DEBUG:root:[WARN]: c) is colliding with {('b',), ('d',)}
DEBUG:root:[WARN]: d) is colliding with {('c',), ('b',)}
DEBUG:root:[WARN]: b) is colliding with {('c',), ('d',), ('f',)}
DEBUG:root:[WARN]: f) is colliding with {('e',), ('b',)}
DEBUG:root:[WARN]: a) is colliding with {('f',)}
DEBUG:root:[WARN]: f) is colliding with {('e',), ('b',), ('a',)}
DEBUG:root:[WARN]: c) is colliding with {('b',), ('g',), ('d',)}
DEBUG:root:[WARN]: g) is colliding with {('c',)}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0146 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0195 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0129 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0214 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'a', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'd', 'c'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'b'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'd', 'b'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0104 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0173 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0127 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b'}
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c', 'd'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'g', 'd'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0174 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0126 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e'}
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'b', 'e'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c', 'd'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'g', 'd'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0025 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0101 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0206 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'b'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'g', 'b'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'c', 'f'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0103 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0179 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'a'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'a', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'd', 'b'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'd', 'f'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0090 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0107 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0175 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0217 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0135 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'g'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'c'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'b', 'g'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f', 'c'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'a', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0087 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0103 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0178 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0216 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b', 'a'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b', 'a', 'e'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'b', 'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0035 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: af) exported to ./out/af.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: bd) exported to ./out/bd.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: bf) exported to ./out/bf.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cd) exported to ./out/cd.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: cg) exported to ./out/cg.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: db) exported to ./out/db.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: dc) exported to ./out/dc.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: ef) exported to ./out/ef.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: fb) exported to ./out/fb.ply
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: fa) exported to ./out/fa.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: fe) exported to ./out/fe.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: gc) exported to ./out/gc.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0094 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0169 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0127 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0210 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0133 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'g', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f', 'c'}
DEBUG:root:[WARN]: d) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0017 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0046 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: af) exported to ./out/af.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: bd) exported to ./out/bd.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: bf) exported to ./out/bf.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cd) exported to ./out/cd.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: cg) exported to ./out/cg.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: dc) exported to ./out/dc.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: db) exported to ./out/db.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: ef) exported to ./out/ef.ply
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: fa) exported to ./out/fa.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: fe) exported to ./out/fe.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: fb) exported to ./out/fb.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: gc) exported to ./out/gc.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0092 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0102 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0176 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0128 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0206 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0131 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f'}
DEBUG:root:[WARN]: d) is colliding with {'b'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'e', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'd', 'g'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0034 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: af) exported to ./out/af.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: bd) exported to ./out/bd.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: bf) exported to ./out/bf.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cd) exported to ./out/cd.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: cg) exported to ./out/cg.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: db) exported to ./out/db.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: dc) exported to ./out/dc.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: ef) exported to ./out/ef.ply
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: fa) exported to ./out/fa.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: fe) exported to ./out/fe.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: fb) exported to ./out/fb.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: gc) exported to ./out/gc.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0091 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0105 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0183 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0221 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {'d'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'e'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'d', 'g', 'b'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c'}
DEBUG:root:[WARN]: f) is colliding with {'b', 'e'}
DEBUG:root:[WARN]: b) is colliding with {'d', 'f', 'c'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b', 'a', 'e'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0033 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0043 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0043 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0035 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0037 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: af) exported to ./out/af.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: bd) exported to ./out/bd.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: bf) exported to ./out/bf.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cd) exported to ./out/cd.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: cg) exported to ./out/cg.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: db) exported to ./out/db.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: dc) exported to ./out/dc.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: ef) exported to ./out/ef.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: fb) exported to ./out/fb.ply
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: fa) exported to ./out/fa.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: fe) exported to ./out/fe.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: gc) exported to ./out/gc.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(4598, 3), faces.shape=(9192, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0108 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0120 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0201 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0141 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7896, 3), faces.shape=(15788, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0143 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(11904, 3), faces.shape=(23804, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0238 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(8212, 3), faces.shape=(16420, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0148 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: c) is colliding with {'g'}
DEBUG:root:[WARN]: g) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b'}
DEBUG:root:[WARN]: e) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'b', 'e'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'c'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'g', 'b', 'd'}
DEBUG:root:[WARN]: b) is colliding with {'f', 'c', 'd'}
DEBUG:root:[WARN]: d) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: a) is colliding with {'f'}
DEBUG:root:[WARN]: f) is colliding with {'a', 'b', 'e'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0032 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0045 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0039 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 9192 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(296, 3), faces.shape=(588, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0019 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1355, 3), faces.shape=(2706, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0044 seconds.
DEBUG:trimesh:Exporting 23804 faces as STL
DEBUG:trimesh:Exporting 15788 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1626, 3), faces.shape=(3248, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 16420 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1868, 3), faces.shape=(3732, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: af) exported to ./out/af.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: bf) exported to ./out/bf.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: bd) exported to ./out/bd.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: cg) exported to ./out/cg.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cd) exported to ./out/cd.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: db) exported to ./out/db.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: dc) exported to ./out/dc.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: ef) exported to ./out/ef.ply
DEBUG:trimesh:Exporting 588 faces as PLY
DEBUG:root:[INFO]: fa) exported to ./out/fa.ply
DEBUG:trimesh:Exporting 2706 faces as PLY
DEBUG:root:[INFO]: fb) exported to ./out/fb.ply
DEBUG:trimesh:Exporting 3248 faces as PLY
DEBUG:root:[INFO]: fe) exported to ./out/fe.ply
DEBUG:trimesh:Exporting 3732 faces as PLY
DEBUG:root:[INFO]: gc) exported to ./out/gc.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0147 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0203 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0146 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a', 'c'}
DEBUG:root:[WARN]: a) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0026 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0055 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0054 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0130 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0231 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0149 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'a'}
DEBUG:root:[WARN]: a) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'a', 'c'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0050 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0028 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0053 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0136 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0207 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0143 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[WARN]: a) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0028 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0018 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0198 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0145 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: a) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: b) is colliding with {'a', 'c'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'b'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files and logs
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:root:[ANSYS]: Total volume of intersections: 0.0034568259316037995
DEBUG:root:[ANSYS]: Standard deviation of object pourcentage intersections: 0.4135267596855446
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0137 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0247 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0199 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'b'}
DEBUG:root:[WARN]: b) is colliding with {'a'}
DEBUG:root:[WARN]: a) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0022 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0050 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0041 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0055 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:root:[INFO]: run analysis on mesh intersections and output to .txt file
DEBUG:root:[ANSYS]: Standard deviation of object stone pourcentage [%]: 0.4135267596855446
DEBUG:root:[ANSYS]: Intersected mesh total volume [m3]: 0.0034568259316037995
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0134 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0224 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0146 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a'}
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0022 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0050 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0057 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:root:[INFO]: run analysis on mesh intersections and output to .txt file
DEBUG:root:[ANSYS]: Standard deviation of object stone pourcentage [%]: 0.4135267596855446
DEBUG:root:[ANSYS]: Intersected mesh total volume [m3]: 0.0034568259316037995
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0132 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0211 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0168 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0028 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0040 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0047 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0038 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0027 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:root:[INFO]: run analysis on mesh intersections and output to .txt file
DEBUG:root:[ANSYS]: Standard deviation of object stone pourcentage [%]: 0.4135267596855446
DEBUG:root:[ANSYS]: Intersected mesh total volume [m3]: 0.0034568259316037995
DEBUG:root:[INFO]: output collision graph
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0157 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0153 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b', 'a'}
DEBUG:root:[WARN]: a) is colliding with {'b', 'c'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0044 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0021 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0020 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:root:[INFO]: run analysis on mesh intersections and output to .txt file
DEBUG:root:[ANSYS]: Standard deviation of object stone pourcentage [%]: 0.4135267596855446
DEBUG:root:[ANSYS]: Intersected mesh total volume [m3]: 0.0034568259316037995
DEBUG:root:[INFO]: output collision graph
DEBUG:graphviz._tools:os.makedirs('./out')
DEBUG:graphviz.saving:write lines to './out/collision_graph'
DEBUG:graphviz.backend.execute:run [PosixPath('dot'), '-Kdot', '-Tpdf', '-O', 'collision_graph']
DEBUG:root:[INFO]: visualization
DEBUG:root:[INFO]: Logger root setup
DEBUG:trimesh:falling back to hashlib hashing: `pip install xxhash`for 50x faster cache checks
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.piping.pipe(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.rendering.render(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.unflattening.unflatten(['stagger', 'fanout', 'chain', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.backend.viewing.view(['quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.quote(['is_html_string', 'is_valid_id', 'dot_keywords', 'endswith_odd_number_of_backslashes', 'escape_unescaped_quotes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.a_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.quoting.attr_list(['kwargs', 'attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.clear(['keep_attrs'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.__iter__(['subgraph'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.node(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.edge(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.attr(['_attributes'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.dot.Dot.subgraph(['name', 'comment', 'graph_attr', 'node_attr', 'edge_attr', 'body'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.piping.Pipe._pipe_legacy(['renderer', 'formatter', 'neato_no_op', 'quiet'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.saving.Save.save(['directory'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.render(['directory', 'view', 'cleanup', 'format', 'renderer', 'formatter', 'neato_no_op', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.rendering.Render.view(['directory', 'cleanup', 'quiet', 'quiet_view'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.unflattening.Unflatten.unflatten(['stagger', 'fanout', 'chain'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.graphs.BaseGraph.__init__(['comment', 'filename', 'directory', 'format', 'engine', 'encoding', 'graph_attr', 'node_attr', 'edge_attr', 'body', 'strict'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.from_file(['directory', 'format', 'engine', 'encoding', 'renderer', 'formatter'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.__init__(['filename', 'directory', 'format', 'engine', 'encoding'])
DEBUG:graphviz._tools:deprecate positional args: graphviz.sources.Source.save(['directory'])
DEBUG:root:[INFO]: load meshes on memory files from container
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(5846, 3), faces.shape=(11688, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0144 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(9533, 3), faces.shape=(19062, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0222 seconds.
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(7680, 3), faces.shape=(15356, 3))> using load_ply
DEBUG:trimesh:load_mesh executed in 0.0148 seconds.
DEBUG:root:[INFO]: load meshes to collision manager
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:trimesh:generating face normals
DEBUG:root:[INFO]: start collision analysis
DEBUG:root:[WARN]: b) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'b'}
DEBUG:root:[WARN]: a) is colliding with {'c'}
DEBUG:root:[WARN]: c) is colliding with {'a', 'b'}
DEBUG:root:[WARN]: a) is colliding with {'c', 'b'}
DEBUG:root:[WARN]: b) is colliding with {'c', 'a'}
DEBUG:root:[INFO]: calculate and store mesh intersections
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0029 seconds.
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0042 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0056 seconds.
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(1816, 3), faces.shape=(3628, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0048 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 11688 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(425, 3), faces.shape=(846, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0022 seconds.
DEBUG:trimesh:Exporting 15356 faces as STL
DEBUG:trimesh:Exporting 19062 faces as STL
DEBUG:trimesh:face_normals didn't match triangles, ignoring!
DEBUG:trimesh:loaded <trimesh.Trimesh(vertices.shape=(2259, 3), faces.shape=(4514, 3))> using load_stl
DEBUG:trimesh:load_mesh executed in 0.0049 seconds.
DEBUG:root:[INFO]: output mesh intersections .ply files
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ac) exported to ./out/ac.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ab) exported to ./out/ab.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: bc) exported to ./out/bc.ply
DEBUG:trimesh:Exporting 3628 faces as PLY
DEBUG:root:[INFO]: ba) exported to ./out/ba.ply
DEBUG:trimesh:Exporting 846 faces as PLY
DEBUG:root:[INFO]: ca) exported to ./out/ca.ply
DEBUG:trimesh:Exporting 4514 faces as PLY
DEBUG:root:[INFO]: cb) exported to ./out/cb.ply
DEBUG:root:[INFO]: run analysis/graph on mesh intersections and output to .txt file
DEBUG:root:[ANSYS]: Standard deviation of object stone pourcentage [%]: 0.4135267596855446
DEBUG:root:[ANSYS]: Intersected mesh total volume [m3]: 0.0034568259316037995
DEBUG:root:[INFO]: output collision graph
DEBUG:graphviz._tools:os.makedirs('./out')
DEBUG:graphviz.saving:write lines to './out/collision_graph'
DEBUG:graphviz.backend.execute:run [PosixPath('dot'), '-Kdot', '-Tpdf', '-O', 'collision_graph']
DEBUG:root:[INFO]: visualization
